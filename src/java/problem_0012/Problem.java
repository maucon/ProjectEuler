package java.problem_0012;

public class Problem {

	public static final String DESCRIPTION = "The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:\r\n"
			+ "\t\t1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...\r\n"
			+ "\t  Let us list the factors of the first seven triangle numbers:\r\n" + "\t\t     1: 1\r\n"
			+ "\t\t    3: 1,3\r\n" + "\t\t     6: 1,2,3,6\r\n" + "\t\t    10: 1,2,5,10\r\n" + "\t\t    15: 1,3,5,15\r\n"
			+ "\t\t    21: 1,3,7,21\r\n" + "\t\t   28: 1,2,4,7,14,28\r\n"
			+ "\t  We can see that 28 is the first triangle number to have over five divisors.\r\n"
			+ "\t  What is the value of the first triangle number to have over five hundred divisors?\r\n";

	public static int solve() {

		int c = 1;
		int value = 1;

		while (true) {
			double square_root = Math.sqrt(value);

			int count = (int) square_root == square_root ? 1 : 0;

			for (int i = 1; i < square_root; i++)
				if (value % i == 0)
					count += 2;

			if (count > 500)
				break;

			c++;
			value += c;
		}

		return value;
	}

}
